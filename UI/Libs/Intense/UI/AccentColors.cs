using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Windows.UI;

namespace Intense.UI
{
    /// <summary>
    /// Provides predefined collections of accent colors.
    /// </summary>
    public static class AccentColors
    {
        private static ImmutableList<Color> metroColors = ImmutableList.Create(
            Color.FromArgb(0xff, 0x33, 0x99, 0xff),   // blue
            Color.FromArgb(0xff, 0x00, 0xab, 0xa9),   // teal
            Color.FromArgb(0xff, 0x33, 0x99, 0x33),   // green
            Color.FromArgb(0xff, 0x8c, 0xbf, 0x26),   // lime
            Color.FromArgb(0xff, 0xf0, 0x96, 0x09),   // orange
            Color.FromArgb(0xff, 0xff, 0x45, 0x00),   // orange red
            Color.FromArgb(0xff, 0xe5, 0x14, 0x00),   // red
            Color.FromArgb(0xff, 0xff, 0x00, 0x97),   // magenta
            Color.FromArgb(0xff, 0xa2, 0x00, 0xff)    // purple   
        );
        private static ImmutableList<Color> wpColors = ImmutableList.Create(
            Color.FromArgb(0xff, 0xa4, 0xc4, 0x00),   // lime
            Color.FromArgb(0xff, 0x60, 0xa9, 0x17),   // green
            Color.FromArgb(0xff, 0x00, 0x8a, 0x00),   // emerald
            Color.FromArgb(0xff, 0x00, 0xab, 0xa9),   // teal
            Color.FromArgb(0xff, 0x1b, 0xa1, 0xe2),   // cyan
            Color.FromArgb(0xff, 0x00, 0x50, 0xef),   // cobalt
            Color.FromArgb(0xff, 0x6a, 0x00, 0xff),   // indigo
            Color.FromArgb(0xff, 0xaa, 0x00, 0xff),   // violet
            Color.FromArgb(0xff, 0xf4, 0x72, 0xd0),   // pink
            Color.FromArgb(0xff, 0xd8, 0x00, 0x73),   // magenta
            Color.FromArgb(0xff, 0xa2, 0x00, 0x25),   // crimson
            Color.FromArgb(0xff, 0xe5, 0x14, 0x00),   // red
            Color.FromArgb(0xff, 0xfa, 0x68, 0x00),   // orange
            Color.FromArgb(0xff, 0xf0, 0xa3, 0x0a),   // amber
            Color.FromArgb(0xff, 0xe3, 0xc8, 0x00),   // yellow
            Color.FromArgb(0xff, 0x82, 0x5a, 0x2c),   // brown
            Color.FromArgb(0xff, 0x6d, 0x87, 0x64),   // olive
            Color.FromArgb(0xff, 0x64, 0x76, 0x87),   // steel
            Color.FromArgb(0xff, 0x76, 0x60, 0x8a),   // mauve
            Color.FromArgb(0xff, 0x87, 0x79, 0x4e)    // taupe
        );

        private static ImmutableList<Color> win10Colors = ImmutableList.Create(
            Color.FromArgb(0xff, 0xff, 0xb9, 0x00),
            Color.FromArgb(0xff, 0xff, 0x8c, 0x00),
            Color.FromArgb(0xff, 0xf7, 0x63, 0x0c),
            Color.FromArgb(0xff, 0xca, 0x50, 0x10),
            Color.FromArgb(0xff, 0xda, 0x3b, 0x01),
            Color.FromArgb(0xff, 0xef, 0x69, 0x50),
            Color.FromArgb(0xff, 0xd1, 0x34, 0x38),
            Color.FromArgb(0xff, 0xff, 0x43, 0x43),
            Color.FromArgb(0xff, 0xe7, 0x48, 0x56),
            Color.FromArgb(0xff, 0xe8, 0x11, 0x23),
            Color.FromArgb(0xff, 0xea, 0x00, 0x5e),
            Color.FromArgb(0xff, 0xc3, 0x00, 0x52),
            Color.FromArgb(0xff, 0xe3, 0x00, 0x8c),
            Color.FromArgb(0xff, 0xbf, 0x00, 0x77),
            Color.FromArgb(0xff, 0xc2, 0x39, 0xb3),
            Color.FromArgb(0xff, 0x9a, 0x00, 0x89),
            Color.FromArgb(0xff, 0x88, 0x17, 0x98),
            Color.FromArgb(0xff, 0xb1, 0x46, 0xc2),
            Color.FromArgb(0xff, 0x74, 0x4d, 0xa9),
            Color.FromArgb(0xff, 0x87, 0x64, 0xb8),
            Color.FromArgb(0xff, 0x6b, 0x69, 0xd6),
            Color.FromArgb(0xff, 0x8e, 0x8c, 0xd8),
            Color.FromArgb(0xff, 0x00, 0x63, 0xb1),
            Color.FromArgb(0xff, 0x00, 0x78, 0xd7),
            Color.FromArgb(0xff, 0x00, 0x99, 0xbc),
            Color.FromArgb(0xff, 0x2d, 0x7d, 0x9a),
            Color.FromArgb(0xff, 0x00, 0xb7, 0xc3),
            Color.FromArgb(0xff, 0x03, 0x83, 0x87),
            Color.FromArgb(0xff, 0x00, 0xb2, 0x94),
            Color.FromArgb(0xff, 0x01, 0x85, 0x74),
            Color.FromArgb(0xff, 0x00, 0xcc, 0x6a),
            Color.FromArgb(0xff, 0x10, 0x89, 0x3e),
            Color.FromArgb(0xff, 0x10, 0x7c, 0x10),
            Color.FromArgb(0xff, 0x49, 0x82, 0x05),
            Color.FromArgb(0xff, 0x48, 0x68, 0x60),
            Color.FromArgb(0xff, 0x56, 0x7c, 0x73),
            Color.FromArgb(0xff, 0x51, 0x5c, 0x6b),
            Color.FromArgb(0xff, 0x68, 0x76, 0x8a),
            Color.FromArgb(0xff, 0x5d, 0x5a, 0x58),
            Color.FromArgb(0xff, 0x7a, 0x75, 0x74),
            Color.FromArgb(0xff, 0x76, 0x76, 0x76),
            Color.FromArgb(0xff, 0x4c, 0x4a, 0x48),
            Color.FromArgb(0xff, 0x69, 0x79, 0x7e),
            Color.FromArgb(0xff, 0x4a, 0x54, 0x59),
            Color.FromArgb(0xff, 0x64, 0x7c, 0x64),
            Color.FromArgb(0xff, 0x52, 0x5e, 0x54),
            Color.FromArgb(0xff, 0x84, 0x75, 0x45),
            Color.FromArgb(0xff, 0x7e, 0x73, 0x5f)
        );

        /// <summary>
        /// Gets the original 9 colors from the Metro design principles.
        /// </summary>
        public static IReadOnlyList<Color> Metro
        {
            get { return metroColors; }
        }

        /// <summary>
        /// Gets the 20 Windows Phone accent colors.
        /// </summary>
        public static IReadOnlyList<Color> WindowsPhone
        {
            get { return wpColors; }
        }

        /// <summary>
        /// Gets the Windows 10 accent colors (48 in total).
        /// </summary>
        public static IReadOnlyList<Color> Windows10
        {
            get { return win10Colors; }
        }
    }
}
